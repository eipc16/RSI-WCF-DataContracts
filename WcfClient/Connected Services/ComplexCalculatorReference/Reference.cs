//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfClient.ComplexCalculatorReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplexNumber", Namespace="http://schemas.datacontract.org/2004/07/WcfDataContracts")]
    [System.SerializableAttribute()]
    public partial class ComplexNumber : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double imaginaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double realField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double imaginary {
            get {
                return this.imaginaryField;
            }
            set {
                if ((this.imaginaryField.Equals(value) != true)) {
                    this.imaginaryField = value;
                    this.RaisePropertyChanged("imaginary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double real {
            get {
                return this.realField;
            }
            set {
                if ((this.realField.Equals(value) != true)) {
                    this.realField = value;
                    this.RaisePropertyChanged("real");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ComplexCalculatorReference.IComplexCalculator")]
    public interface IComplexCalculator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplexCalculator/add", ReplyAction="http://tempuri.org/IComplexCalculator/addResponse")]
        WcfClient.ComplexCalculatorReference.ComplexNumber add(WcfClient.ComplexCalculatorReference.ComplexNumber left, WcfClient.ComplexCalculatorReference.ComplexNumber right);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplexCalculator/add", ReplyAction="http://tempuri.org/IComplexCalculator/addResponse")]
        System.Threading.Tasks.Task<WcfClient.ComplexCalculatorReference.ComplexNumber> addAsync(WcfClient.ComplexCalculatorReference.ComplexNumber left, WcfClient.ComplexCalculatorReference.ComplexNumber right);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplexCalculator/sub", ReplyAction="http://tempuri.org/IComplexCalculator/subResponse")]
        WcfClient.ComplexCalculatorReference.ComplexNumber sub(WcfClient.ComplexCalculatorReference.ComplexNumber left, WcfClient.ComplexCalculatorReference.ComplexNumber right);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplexCalculator/sub", ReplyAction="http://tempuri.org/IComplexCalculator/subResponse")]
        System.Threading.Tasks.Task<WcfClient.ComplexCalculatorReference.ComplexNumber> subAsync(WcfClient.ComplexCalculatorReference.ComplexNumber left, WcfClient.ComplexCalculatorReference.ComplexNumber right);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplexCalculator/mult", ReplyAction="http://tempuri.org/IComplexCalculator/multResponse")]
        WcfClient.ComplexCalculatorReference.ComplexNumber mult(WcfClient.ComplexCalculatorReference.ComplexNumber left, WcfClient.ComplexCalculatorReference.ComplexNumber right);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplexCalculator/mult", ReplyAction="http://tempuri.org/IComplexCalculator/multResponse")]
        System.Threading.Tasks.Task<WcfClient.ComplexCalculatorReference.ComplexNumber> multAsync(WcfClient.ComplexCalculatorReference.ComplexNumber left, WcfClient.ComplexCalculatorReference.ComplexNumber right);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplexCalculator/div", ReplyAction="http://tempuri.org/IComplexCalculator/divResponse")]
        WcfClient.ComplexCalculatorReference.ComplexNumber div(WcfClient.ComplexCalculatorReference.ComplexNumber left, WcfClient.ComplexCalculatorReference.ComplexNumber right);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplexCalculator/div", ReplyAction="http://tempuri.org/IComplexCalculator/divResponse")]
        System.Threading.Tasks.Task<WcfClient.ComplexCalculatorReference.ComplexNumber> divAsync(WcfClient.ComplexCalculatorReference.ComplexNumber left, WcfClient.ComplexCalculatorReference.ComplexNumber right);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IComplexCalculatorChannel : WcfClient.ComplexCalculatorReference.IComplexCalculator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ComplexCalculatorClient : System.ServiceModel.ClientBase<WcfClient.ComplexCalculatorReference.IComplexCalculator>, WcfClient.ComplexCalculatorReference.IComplexCalculator {
        
        public ComplexCalculatorClient() {
        }
        
        public ComplexCalculatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ComplexCalculatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComplexCalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComplexCalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WcfClient.ComplexCalculatorReference.ComplexNumber add(WcfClient.ComplexCalculatorReference.ComplexNumber left, WcfClient.ComplexCalculatorReference.ComplexNumber right) {
            return base.Channel.add(left, right);
        }
        
        public System.Threading.Tasks.Task<WcfClient.ComplexCalculatorReference.ComplexNumber> addAsync(WcfClient.ComplexCalculatorReference.ComplexNumber left, WcfClient.ComplexCalculatorReference.ComplexNumber right) {
            return base.Channel.addAsync(left, right);
        }
        
        public WcfClient.ComplexCalculatorReference.ComplexNumber sub(WcfClient.ComplexCalculatorReference.ComplexNumber left, WcfClient.ComplexCalculatorReference.ComplexNumber right) {
            return base.Channel.sub(left, right);
        }
        
        public System.Threading.Tasks.Task<WcfClient.ComplexCalculatorReference.ComplexNumber> subAsync(WcfClient.ComplexCalculatorReference.ComplexNumber left, WcfClient.ComplexCalculatorReference.ComplexNumber right) {
            return base.Channel.subAsync(left, right);
        }
        
        public WcfClient.ComplexCalculatorReference.ComplexNumber mult(WcfClient.ComplexCalculatorReference.ComplexNumber left, WcfClient.ComplexCalculatorReference.ComplexNumber right) {
            return base.Channel.mult(left, right);
        }
        
        public System.Threading.Tasks.Task<WcfClient.ComplexCalculatorReference.ComplexNumber> multAsync(WcfClient.ComplexCalculatorReference.ComplexNumber left, WcfClient.ComplexCalculatorReference.ComplexNumber right) {
            return base.Channel.multAsync(left, right);
        }
        
        public WcfClient.ComplexCalculatorReference.ComplexNumber div(WcfClient.ComplexCalculatorReference.ComplexNumber left, WcfClient.ComplexCalculatorReference.ComplexNumber right) {
            return base.Channel.div(left, right);
        }
        
        public System.Threading.Tasks.Task<WcfClient.ComplexCalculatorReference.ComplexNumber> divAsync(WcfClient.ComplexCalculatorReference.ComplexNumber left, WcfClient.ComplexCalculatorReference.ComplexNumber right) {
            return base.Channel.divAsync(left, right);
        }
    }
}
